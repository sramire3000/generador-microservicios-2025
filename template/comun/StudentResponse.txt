package ${myUtil.packageName}.infrastructure.adapters.input.rest.model.response;

import java.util.List;
import java.util.Date;

import java.math.BigDecimal;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

import org.springframework.beans.factory.annotation.Value;

import ${myUtil.packageName}.utils.UtilValidate;
import ${myUtil.packageName}.utils.UtilAES256;

@SuppressWarnings("unused")
@Builder
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
public class ${myUtil.entityClassName}Response  {

	@Value("field.secret.key")
	private String key;
	
	@Value("field.secret.salt")
	private String salt;	

<%
    
    for(attr in myUtil.list){
    
    	//Id
    	if (attr.isPk == true){
    	    println("    //" + attr.description);
			if (attr.type=="Long"){
			    if (attr.nameLabel==""){
			       println("    private Long " + attr.name + ";" + "     //"+ attr.description);
			    }else{
			       println("    private Long " + attr.nameLabel + ";" + "     //"+ attr.description);
			    }
	        }else if(attr.type=="Integer"){
	            if (attr.nameLabel==""){
	               println("    private Integer " + attr.name + ";" + "     //"+ attr.description);
	            }else{
	               println("    private Integer " + attr.nameLabel + ";" + "     //"+ attr.description);
	            }
			}else if (attr.type=="Varchar" ){
			    if (attr.nameLabel==""){
			       println("    private String " + attr.name + ";" + "     //"+ attr.description);
			    }else{
			       println("    private String " + attr.nameLabel + ";" + "     //"+ attr.description);
			    }
			}else if (attr.type=="String"){
			    if (attr.nameLabel==""){
			       println("    private String " + attr.name + ";" + "     //"+ attr.description);
			    }else{
			       println("    private String " + attr.nameLabel + ";" + "     //"+ attr.description);
			    }
			}
        	println(""); 
    	}else{
    	    if (attr.type=="String" || attr.type=="Varchar"){
    			println("    //" + attr.description);
    			if (attr.nameLabel==""){
    			   println("    private String " + attr.name + ";");
    			}else{
    			   println("    private String " + attr.nameLabel + ";");
    			}
    		}else if (attr.type=="Short"){
        		println("    //" + attr.description);
        		if (attr.nameLabel==""){
        		   println("    private " + attr.type + " " + attr.name + ";");
        		}else{
        		   println("    private " + attr.type + " " + attr.nameLabel + ";");
        		}
        	}else if (attr.type=="Integer"){
        		println("    //" + attr.description);
        		if (attr.nameLabel==""){
        		   println("    private " + attr.type + " " + attr.name + ";");
        		}else{
        		   println("    private " + attr.type + " " + attr.nameLabel + ";");
        		}
    		}else if (attr.type=="Long") {
    			println("    //" + attr.description);
    			if (attr.nameLabel==""){
    			   println("    private " + attr.type + " " + attr.name + ";");
    			}else{
    			   println("    private " + attr.type + " " + attr.nameLabel + ";");
    			}
    		}else if (attr.type=="Double") {
    			println("    //" + attr.description);
    			if (attr.nameLabel==""){
    			   println("    private " + attr.type + " " + attr.name + ";");
    			}else{
    			   println("    private " + attr.type + " " + attr.nameLabel + ";");
    			}
    	    }else if (attr.type=="BigDecimal"){   	
    	        println("    //" + attr.description);
    	        if (attr.nameLabel==""){
    	           println("    private " + attr.type + " " + attr.name + ";");
    	        }else{
    	           println("    private " + attr.type + " " + attr.nameLabel + ";");
    	        }
    		}else if (attr.type=="Date") {
    			println("    //" + attr.description);
    			if (attr.nameLabel==""){
    			   println("    private " + attr.type + " " + attr.name + ";");
    			}else{
    			   println("    private " + attr.type + " " + attr.nameLabel + ";");
    			}
    		} else if(attr.type=="TIMESTAMP"){
    			println("    //" + attr.description);
    			if (attr.nameLabel==""){
    			   println("    private Date "+ attr.name + ";");
    			}else{
    			   println("    private Date "+ attr.nameLabel + ";");
    			}
    		}else if(attr.type=="Boolean"){
    			println("    //" + attr.description);
    			if (attr.nameLabel==""){
    			   println("    private Boolean "+ attr.name + ";");
    			}else{
    			   println("    private Boolean "+ attr.nameLabel + ";");
    			}
    		}else{
    			println("    //" + attr.description);
    			if (attr.nameLabel==""){
    			   println("    private " + attr.type + " " + attr.name + ";");
    			}else{
    			   println("    private " + attr.type + " " + attr.nameLabel + ";");
    			}
                   	
		    }
		    println("");
    	}
    }

%>
<%
	
	println("    //Metodos Get's");
	
	for(attr in myUtil.list){
		if (attr.type=="String" || attr.type=="Varchar"){
			if (attr.isEncrypt==false){
			   if (attr.nameLabel==""){
			      %>    public String get${attr.camelCaseName}() {return UtilValidate.validateString(${attr.name});}<%
			   }else{
			      %>    public String get${attr.camelCaseNameLabel}() {return UtilValidate.validateString(${attr.nameLabel});}<%
			   }
			}else{
			   if (attr.nameLabel==""){
			      %>    public String get${attr.camelCaseName}() {return UtilAES256.encrypt(UtilValidate.validateString(${attr.name}), key, salt);}<%
			   }else{
			      %>    public String get${attr.camelCaseNameLabel}() {return UtilAES256.encrypt(UtilValidate.validateString(${attr.nameLabel}), key, salt);}<%
			   }
			}
		}else if (attr.type=="Short"){
		    if (attr.nameLabel==""){
	          %>    public Short get${attr.camelCaseName}() {return UtilValidate.validateShort(${attr.name});}<%
	        }else{
	          %>    public Short get${attr.camelCaseNameLabel}() {return UtilValidate.validateShort(${attr.nameLabel});}<%
	        }
		}else if (attr.type=="Integer"){
		    if (attr.nameLabel==""){
		       %>    public Integer get${attr.camelCaseName}() {return UtilValidate.validateInteger(${attr.name});}<%
		    }else{
		       %>    public Integer get${attr.camelCaseNameLabel}() {return UtilValidate.validateInteger(${attr.nameLabel});}<%
		    }
		}else if (attr.type=="Long"){
		    if (attr.nameLabel==""){
		       %>    public Long get${attr.camelCaseName}() {return ${attr.name};}<%
		    }else{
		       %>    public Long get${attr.camelCaseNameLabel}() {return ${attr.nameLabel};}<%
		    }
			
		}else if (attr.type=="Double") {
		    if (attr.nameLabel==""){
		       %>    public Double get${attr.camelCaseName}() {return UtilValidate.validateDouble(${attr.name});}<%
		    }else{
		       %>    public Double get${attr.camelCaseNameLabel}() {return UtilValidate.validateDouble(${attr.nameLabel});}<%
		    }
		}else if (attr.type=="BigDecimal"){
		    if (attr.nameLabel==""){
		       %>    public BigDecimal get${attr.camelCaseName}() {return UtilValidate.validateBigDecimal(${attr.name});}<%
		    }else{
		       %>    public BigDecimal get${attr.camelCaseNameLabel}() {return UtilValidate.validateBigDecimal(${attr.nameLabel});}<%
		    }
		}else if (attr.type=="Date"){
		    if (attr.nameLabel==""){
		       %>    public Date get${attr.camelCaseName}() {return UtilValidate.validateDateSql(${attr.name});}<%
		    }else{
		       %>    public Date get${attr.camelCaseNameLabel}() {return UtilValidate.validateDateSql(${attr.nameLabel});}<%
		    }
		}else if(attr.type=="TIMESTAMP"){
		    if (attr.nameLabel==""){
		       %>    public Date get${attr.camelCaseName}() {return ${attr.name};}<%
		    }else{
		       %>    public Date get${attr.camelCaseNameLabel}() {return ${attr.nameLabel};}<%
		    }
		}else if(attr.type=="Boolean"){
		    if (attr.nameLabel==""){
		       %>    public Boolean get${attr.camelCaseName}() {return ${attr.name};}<%
		    }else{
		       %>    public Boolean get${attr.camelCaseNameLabel}() {return ${attr.nameLabel};}<%
		    }
		}
		println("");
	}
%>

  }
