package ${myUtil.packageName}.infrastructure.adapters.output.persistence;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Component;

import lombok.RequiredArgsConstructor;

import ${myUtil.packageName}.domain.model.${myUtil.entityClassName};
import ${myUtil.packageName}.application.ports.output.I${myUtil.entityClassName}PersistencePort;

import ${myUtil.packageName}.infrastructure.adapters.output.persistence.mapper.I${myUtil.entityClassName}PersitenceMappers;
import ${myUtil.packageName}.infrastructure.adapters.output.persistence.repository.I${myUtil.entityClassName}Repository;

@Component
@RequiredArgsConstructor
public class ${myUtil.entityClassName}PersistenceAdapter implements I${myUtil.entityClassName}PersistencePort{

	private final I${myUtil.entityClassName}Repository repository;
	
	private final I${myUtil.entityClassName}PersitenceMappers mapper;
	
	//Implementacion del Metodo buscar todos
    @Override
    public List<${myUtil.entityClassName}> findAll(){
        return mapper.to${myUtil.entityClassName}List(repository.findAll());
    }

	//Implementacion del Metodo Buscar por Id
	@Override
    public Optional<${myUtil.entityClassName}> findById(<%
        for(attr in myUtil.list){
            if(attr.isPk == true)
                print(attr.type);
        }
    %> id){
        return repository.findById(id).map(mapper::to${myUtil.entityClassName});
    }
    
	//Implementacion del Metodo Save
	@Override
    public ${myUtil.entityClassName} save(${myUtil.entityClassName} ${myUtil.entityName}){
        return mapper.to${myUtil.entityClassName}(repository.save(mapper.to${myUtil.entityClassName}Entity(${myUtil.entityName})));
    }
    
    //Implementacion del Metodo Delete
	@Override
    public void deleteById(<%
        for(attr in myUtil.list){
            if(attr.isPk == true)
                print(attr.type);
        }
    %> id){
        repository.deleteById(id);
    }
    
<%
    for(attr in myUtil.list){
    	if (attr.type=="String" || attr.type=="Varchar"){
        		
    		if (attr.isFind == true){
	    	  println("    //Busqueda por "+ attr.description);
              println("    @Override");
              if (attr.nameLabel==""){
                 %>    public List<${myUtil.entityClassName}> findBy${attr.camelCaseName}(String ${attr.name}){ <%
              }else{
                 %>    public List<${myUtil.entityClassName}> findBy${attr.camelCaseNameLabel}(String ${attr.nameLabel}){ <%
              }
              
              println("");
              if (attr.nameLabel==""){
                 %>        return mapper.to${myUtil.entityClassName}List(repository.findBy${attr.camelCaseName}(${attr.name})); <%
              }else{
                 %>        return mapper.to${myUtil.entityClassName}List(repository.findBy${attr.camelCaseNameLabel}(${attr.nameLabel})); <%
              }
              
              println("");
              %>    }<%
              println("");
              println("");              
    		}

    		if (attr.isFindLike == true){
	    	  println("    //Busqueda por "+ attr.description);
              println("    @Override");
              if (attr.nameLabel==""){
                 %>    public List<${myUtil.entityClassName}> findBy${attr.camelCaseName}(String ${attr.name}){ <%
              }else{
                 %>    public List<${myUtil.entityClassName}> findBy${attr.camelCaseNameLabel}(String ${attr.nameLabel}){ <%
              }
              println("");
              if (attr.nameLabel==""){
                 %>        return mapper.to${myUtil.entityClassName}List(repository.findBy${attr.camelCaseName}("%"+${attr.name}.trim()+"%")); <%
              }else{
                 %>        return mapper.to${myUtil.entityClassName}List(repository.findBy${attr.camelCaseName}("%"+${attr.nameLabel}.trim()+"%")); <%              
              }
              
              println("");
              %>    }<%
              println("");
              println("");              
    		}
    	} 
        
    }	
%>
}