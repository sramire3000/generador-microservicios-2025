package ${myUtil.packageName}.infrastructure.adapters.input.rest;

import java.util.List;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.RequestMapping;

import jakarta.validation.Valid;

import lombok.RequiredArgsConstructor;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ${myUtil.packageName}.application.ports.input.I${myUtil.entityClassName}ServicePort;
import ${myUtil.packageName}.infrastructure.adapters.input.rest.mapper.I${myUtil.entityClassName}RestMapper;
import ${myUtil.packageName}.infrastructure.adapters.input.rest.model.request.${myUtil.entityClassName}CreateRequest;
import ${myUtil.packageName}.infrastructure.adapters.input.rest.model.response.${myUtil.entityClassName}Response;

@RestController
@RequiredArgsConstructor
@CrossOrigin(origins = "*")
@RequestMapping("/${myUtil.entityNameCamelCaseLower}")
public class ${myUtil.entityClassName}RestAdapter {

    //Para el log
    private Logger log = LoggerFactory.getLogger(${myUtil.entityClassName}RestAdapter.class);
    
	private final I${myUtil.entityClassName}ServicePort serviceport;
	private final I${myUtil.entityClassName}RestMapper restMapper;    

    
	/* Metodo listar todos con pagineo */
    @GetMapping(path="/v1/api", produces = MediaType.APPLICATION_JSON_VALUE)
    public List<${myUtil.entityClassName}Response> findAll() {
    
        log.info("REST request to get all ${myUtil.entityClassName}");
    	
		//Resultado
		return restMapper.to${myUtil.entityClassName}ResponeList(serviceport.findAll());
    }
    
	/* Metodo buscar por Id */
	@GetMapping(path="/v1/api/{<%for(attr in myUtil.list){
			                                if(attr.isPk == true){
			                                   if (attr.nameLabel==""){
			                                      %>${attr.camelCaseNameLower}<%
			                                   }else{
			                                      %>${attr.camelCaseNameLabelLower}<%
			                                   }
			                                }
		                                }%>}", produces = MediaType.APPLICATION_JSON_VALUE)
    public ${myUtil.entityClassName}Response findId(@PathVariable <%for(attr in myUtil.list){
			                                          if(attr.isPk == true){
			                                             if (attr.nameLabel==""){
			                                                %>${attr.type} ${attr.camelCaseNameLower}<%
			                                             }else{
			                                                %>${attr.type} ${attr.camelCaseNameLabelLower}<%
			                                             }
			                                             
			                                          }
		                                            }%>) throws Exception {
    
    	log.info("REST request to get ${myUtil.entityClassName} : {}", <%for(attr in myUtil.list){
			                                                               if(attr.isPk == true){
			                                                                  if (attr.nameLabel==""){
			                                                                     %>${attr.camelCaseNameLower}<%
			                                                                  }else{
			                                                                     %>${attr.camelCaseNameLabelLower}<%
			                                                                  }
			                                                               }
		                                                                }%>);
    	
        return restMapper.to${myUtil.entityClassName}Response(serviceport.findById(<%for(attr in myUtil.list){if(attr.isPk == true){if (attr.nameLabel==""){print(attr.camelCaseNameLower);}else{print(attr.camelCaseNameLabelLower);}
        
        }}%>));
    }
   

	/* Metodo Guardar */
    @PostMapping(path="/v1/api", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<${myUtil.entityClassName}Response> save(@Valid @RequestBody ${myUtil.entityClassName}CreateRequest request) {
    
        log.info("REST request to save ${myUtil.entityClassName} : {}", request);
   
		return ResponseEntity.status(HttpStatus.CREATED)
				.body(restMapper.to${myUtil.entityClassName}Response(
					serviceport.save(restMapper.to${myUtil.entityClassName}(request))
				));
    }
   
	/* Metodo Update */
    @PutMapping(path="/v1/api/{<%
		for(attr in myUtil.list){
			if(attr.isPk == true){
			   if (attr.nameLabel==""){
			      %>${attr.camelCaseNameLower}<%
			   }else{
			      %>${attr.camelCaseNameLabelLower}<%
			   }
			}
		}             
		%>}", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
    public ${myUtil.entityClassName}Response update(@Valid @RequestBody ${myUtil.entityClassName}CreateRequest request, @PathVariable <%for(attr in myUtil.list){
                                                                                                                      	if(attr.isPk == true){
                                                                                                                      	   if (attr.nameLabel==""){
                                                                                                                      	      %>${attr.type} ${attr.camelCaseNameLower}<%
                                                                                                                      	   }else{
                                                                                                                      	      %>${attr.type} ${attr.camelCaseNameLabelLower}<%
                                                                                                                      	   }
	                                                                                                                    }
                                                                                                                      }%>) {
    
    	log.info("REST request to update ${myUtil.entityClassName} : {}, {}", <%for(attr in myUtil.list){
	                                                                               if(attr.isPk == true){
	                                                                                 if (attr.nameLabel==""){
	                                                                                    %>${attr.camelCaseNameLower}<%
	                                                                                 }else{
	                                                                                    %>${attr.camelCaseNameLabelLower}<%
	                                                                                 }
	                                                                               }
                                                                                }%>, request);
                                                                                
		return restMapper.to${myUtil.entityClassName}Response(
				serviceport.update(restMapper.to${myUtil.entityClassName}(request), <%for(attr in myUtil.list){if(attr.isPk == true){if (attr.nameLabel==""){print(attr.camelCaseNameLower);}else{print(attr.camelCaseNameLabelLower);}}}%>)
		);
    }
   
   
	/* Metodo Delete */
    @DeleteMapping(path="/v1/api/{<%
		for(attr in myUtil.list){
			if(attr.isPk == true){
			   if (attr.nameLabel==""){
			      %>${attr.camelCaseNameLower}<%
			   }else{
			      %>${attr.camelCaseNameLabelLower}<%
			   }
			 
			}
		}             
		%>}", produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void delete(@PathVariable <%for(attr in myUtil.list){
	                                     if(attr.isPk == true){
	                                       if (attr.nameLabel==""){
	                                          %>${attr.type} ${attr.camelCaseNameLower}<%
	                                       }else{
	                                          %>${attr.type} ${attr.camelCaseNameLabelLower}<%
	                                       }
	                                       
	                                     }
                                       }             
       %>) {
    
       log.info("REST request to delete ${myUtil.entityClassName} : {}", <%for(attr in myUtil.list){
	                                                                          if(attr.isPk == true){
	                                                                             if (attr.nameLabel==""){
	                                                                                %>${attr.camelCaseNameLower}<%
	                                                                             }else{
	                                                                                %>${attr.camelCaseNameLabelLower}<%
	                                                                             }
	                                                                             
	                                                                          }
                                                                             }             
                                                                          %>); 
	   serviceport.deleteById(<%for(attr in myUtil.list){
	                                             if(attr.isPk == true){
	                                                if (attr.nameLabel==""){
	                                                   %>${attr.camelCaseNameLower}<%
	                                                }else{
	                                                   %>${attr.camelCaseNameLabelLower}<%
	                                                }
	                                                 
	                                             }
                                                }%>);	   
    }
    
<%
    for(attr in myUtil.list){
    
    	if (attr.type=="String" || attr.type=="Varchar"){
    		if (attr.isFindLike == true){
    		    println("");
    		    println("    /* Busqueda por "+ attr.description +" */");
    		    if (attr.nameLabel==""){
    		       %>    @GetMapping(path="/v1/api/${attr.camelCaseNameLower}/{${attr.name}}", produces = MediaType.APPLICATION_JSON_VALUE)<%
    		    }else{
    		       %>    @GetMapping(path="/v1/api/${attr.nameLabel}/{${attr.camelCaseNameLabelLower}}", produces = MediaType.APPLICATION_JSON_VALUE)<%
    		    }
    		    
    		    println("");
    		    if (attr.nameLabel==""){
    		       %>    public List<${myUtil.entityClassName}Response> find${attr.camelCaseNameUpper}(@PathVariable String ${attr.camelCaseNameLower}) {<%
    		    }else{
    		       %>    public List<${myUtil.entityClassName}Response> find${attr.camelCaseNameLabelUpper}(@PathVariable String ${attr.camelCaseNameLabelLower}) {<%
    		    }
    		    println("");
    		    println("    //Retornando respuesta");
    		    if (attr.nameLabel==""){
    		       %>    return restMapper.to${myUtil.entityClassName}ResponeList(serviceport.findBy${attr.camelCaseNameUpper}(${attr.camelCaseNameLower}));}<%
    		    }else{
    		       %>    return restMapper.to${myUtil.entityClassName}ResponeList(serviceport.findBy${attr.camelCaseNameLabelUpper}(${attr.camelCaseNameLabelLower}));}<%
    		    }
               println("");
    		}
    	} 
    	
        
    }	
%>    
   
}