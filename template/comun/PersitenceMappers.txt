package ${myUtil.packageName}.infrastructure.adapters.output.persistence.mapper;

import java.util.List;

import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.ReportingPolicy;

import ${myUtil.packageName}.domain.model.${myUtil.entityClassName};
import ${myUtil.packageName}.infrastructure.adapters.output.persistence.entity.${myUtil.entityClassName}Entity;

@Mapper(componentModel = "spring", unmappedTargetPolicy = ReportingPolicy.IGNORE)
public interface I${myUtil.entityClassName}PersitenceMappers {

	/* source = ${myUtil.entityClassName}  target = ${myUtil.entityClassName}Entity */
	
	//Entity a Model
<%
    for(attr in myUtil.list){
       if (attr.nameLabel==""){
          println('    @Mapping(source="'+ attr.camelCaseNameLower+'", target="'+attr.camelCaseNameLower+'")');
       }else{
          println('    @Mapping(source="'+ attr.camelCaseNameLabelLower+'", target="'+attr.camelCaseNameLower+'")');
       }
       
    }	
%>
	${myUtil.entityClassName}Entity to${myUtil.entityClassName}Entity(${myUtil.entityClassName} ${myUtil.entityName});
	
	
	
    //Model a Entity	
<%
    for(attr in myUtil.list){
       if (attr.nameLabel==""){
          println('    @Mapping(source="'+ attr.camelCaseNameLower+'", target="'+attr.camelCaseNameLower+'")');
       }else{
          println('    @Mapping(source="'+ attr.camelCaseNameLower+'", target="'+attr.camelCaseNameLabelLower+'")');
       }
       
    }	
%>    
	${myUtil.entityClassName} to${myUtil.entityClassName}(${myUtil.entityClassName}Entity entity);
	
    //List<Entity> a List<Model>
	List<${myUtil.entityClassName}> to${myUtil.entityClassName}List(List<${myUtil.entityClassName}Entity> entityList);
	
}